@use "../node_modules/wayfinder-animation-tool/dist/wayfinder.scss" as wat;

@mixin card {
  padding: 0.3em;
}

@mixin test-waypoint {
  margin-bottom: 1em;
  width: 7em;
  height: 5em;
  color: crimson;
  border: dotted 6px;
}

@mixin offset-container {
  margin: 1.07em;
  padding: 0.36em;
}

@mixin diff-origin-container {
  width: 8em;
  height: 8em;
}

html {
  touch-action: manipulation;
}

body {
  @include wat.body--enable-clipping-to-page-width;
  background-color: #181a1b;
  font-family: "Oxygen", sans-serif, bold;
  font-weight: 700;
  font-size: initial;
}

.template {
  display: none;
}

.trialgrounds {
  font-size: 1.75em;
  margin: 0.5em;
  color: purple;
  border: dotted 3px;
}

.test-traveler {
  @include wat.traveler;
  color: lime;
}

.fail-content {
  @include card;
  color: inherit;
}

.pass-content {
  @include card;
  color: lime;
}

.wayfinder {
  @include wat.wayfinder;
  @include wat.wayfinder--safari-3d-clipping-bug--translatez;
}

// STANDALONE

.standalone-trialgrounds {
  margin-bottom: 2.5em;
}

.standalone-wayfinder {
  @include wat.wayfinder--clip-to-nearest-positioned-ancestor;
}

.control-waypoint {
  @include test-waypoint;
}

.font-size-waypoint {
  @include test-waypoint;
  font-size: 0.9em;
}

.font-size-rem-waypoint {
  @include test-waypoint;
  font-size: 1.5rem;
}

.absolute-waypoint {
  @include test-waypoint;
  position: absolute;
  top: 1em;
  right: 1em;
}

.size-waypoint {
  @include test-waypoint;
  width: 5em;
  height: 3em;
}

.relative-waypoint {
  @include test-waypoint;
  position: relative;
  top: 0.5em;
  left: 0.5em;
}

.translate-waypoint {
  @include test-waypoint;
  transform: translateX(1em) translateY(0.5em);
}

.rotate-origin-0-waypoint {
  @include test-waypoint;

  transform: rotateZ(10deg);
  transform-origin: top left;
  margin-bottom: 1.5em;
}

.rotate-origin-mid-waypoint {
  @include test-waypoint;
  margin-bottom: 1.2em;
  transform: rotateZ(10deg);
}

.rotate-3d-waypoint {
  @include test-waypoint;
  transform: scale(1.25) rotateX(50deg) rotateZ(45deg);
  margin-bottom: 2em;
}

.post-translate-down-waypoint {
  @include test-waypoint;
  margin-bottom: 4em;

  transform: rotateZ(45deg);

  color: gold;
}

.post-rotate-waypoint {
  @include test-waypoint;
  transform: rotateZ(45deg);

  color: gold;
  margin-bottom: 2.5em;
}

.overflowing-content-waypoint {
  @include test-waypoint;
  .fail-content {
    font-size: 1.5em;
  }
}

.overflowing-content-traveler {
  .pass-content {
    font-size: 1.5em;
  }
}

.x-clipping-waypoint {
  @include test-waypoint;
  position: absolute;
  right: 0.8em;
  bottom: 0.8em;
  color: gold;
}

// NESTED WAYPOINT

.nested-trialgrounds {
  position: relative;
}

.nested-waypoint {
  @include test-waypoint;
  margin-bottom: 0;
}

.nested-container {
  width: -moz-fit-content;
  width: fit-content;
  height: fit-content;
  border: solid 9px;
  color: lightseagreen;
}

.nested-in-absolute-container {
  @include offset-container;
  position: absolute;
  right: 1em;
  top: 1em;
  margin: 0;
}

.nested-font-size-container {
  margin-top: 1.07em;
  font-size: 1.05em;
}

.nested-font-size-waypoint {
  font-size: 1.05em;
}

.nested-font-size-rem-container {
  margin-top: 1.07em;
  font-size: 1.2rem;
}

.nested-font-size-rem-waypoint {
  font-size: 1.1em;
}

.nested-rem-reset-container {
  margin-top: 1.07em;
  font-size: 1.1em;
}

.nested-rem-reset-waypoint {
  font-size: 1.32rem;
}

.nested-padding-container {
  @include offset-container;
}

.nested-in-relative-container {
  @include offset-container;
  position: relative;
  left: 0.7em;
  top: 0.7em;
  margin-bottom: 2em;
}

.nested-relative-in-static-container {
  @include offset-container;
}

.nested-relative-in-static-waypoint {
  position: relative;
  top: 0.2em;
  left: 0.2em;
}

.nested-relative-in-relative-container {
  @include offset-container;
  position: relative;
  left: 0.7em;
  top: 0.7em;
  margin-bottom: 2em;
}

.nested-relative-in-relative-waypoint {
  position: relative;
  top: 0.2em;
  left: 0.2em;
}

.nested-relative-in-transformed-container {
  @include offset-container;
  transform: rotate(10deg);
}

.nested-relative-in-transformed-waypoint {
  position: relative;
  top: 0.2em;
  left: 0.2em;
}

.nested-absolute-in-relative-container {
  @include offset-container;
  position: relative;
  left: 0.7em;
  top: 0.7em;
  width: 1em;
  height: 6em;
}

.nested-absolute-in-relative-waypoint {
  position: absolute;
  right: -8em;
  bottom: 0.2em;
}

.nested-absolute-in-transform-container {
  @include offset-container;
  transform: rotate(10deg);
  width: 1em;
  height: 6em;
}

.nested-absolute-in-transform-waypoint {
  position: absolute;
  right: -8em;
  bottom: 0.2em;
}

.nested-absolute-in-will-transform-container {
  @include offset-container;
  will-change: transform;
  width: 1em;
  height: 6em;
}

.nested-absolute-in-will-transform-waypoint {
  position: absolute;
  right: -8em;
  bottom: 0.2em;
  height: 5.5em;
}

.nested-rotates-0-container {
  @include offset-container;
  transform: rotateZ(10deg);
  transform-origin: top left;
  margin-bottom: 3em;
}

.nested-rotates-0-waypoint {
  transform: rotateZ(20deg);
  transform-origin: top left;
}

.nested-rotates-center-container {
  @include offset-container;
  transform: rotateZ(10deg);
  margin-bottom: 1.5em;
}

.nested-rotates-center-waypoint {
  transform: rotateZ(20deg);
}

.nested-diff-origin-control-container {
  @include offset-container;
  @include diff-origin-container;
  transform: rotateZ(0deg);
  margin-bottom: 1.8em;
}

.diff-origin-rotate-container {
  @include offset-container;
  @include diff-origin-container;
  transform: rotateZ(20deg);
  margin-bottom: 2.5em;
}

.diff-origin-rotates-container {
  @include offset-container;
  @include diff-origin-container;
  transform: rotateZ(40deg);
  margin-bottom: 2.5em;
}

.diff-origin-rotates-waypoint {
  transform: rotateZ(10deg);
}

.countering-3d-rotates-container {
  @include offset-container;
  transform: rotateY(45deg);
}

.countering-3d-rotates-waypoint {
  transform: rotateY(-45deg);
}

.countering-preserve3d-rotates-container {
  @include offset-container;
  transform: rotateY(45deg);
  transform-style: preserve-3d;
  margin-bottom: 1.5em;
}

.countering-preserve3d-rotates-waypoint {
  transform: rotateY(-45deg);
}

.nested-3d-complicated-container {
  transform: scale(1.25) rotateX(50deg) rotateZ(45deg);
  margin-bottom: 2em;
  margin-left: 2em;
}

.nested-3d-complicated-waypoint {
  transform: rotateX(10deg) rotateZ(8deg);
}

.nested-preserve3d-complicated-container {
  transform: scale(1.25) rotateX(50deg) rotateZ(45deg);
  transform-style: preserve-3d;
  margin-left: 2em;
  margin-bottom: 1.5em;
}

.nested-preserve3d-complicated-waypoint {
  transform: rotateX(10deg) rotateZ(8deg);
}

.scroll-container {
  @include offset-container;
  margin: 1em;
  margin-top: 1.2em;
  width: 3em;
  height: 2.2em;
  padding-top: 5.25em;
  padding-left: 5.25em;
  overflow: scroll;
}

.scroll-waypoint {
  outline: dotted 0.2em gold;
  outline-offset: 0.2em;

  .fail-content {
    color: red;
  }
}

.absolute-in-scrolled-container {
  position: relative;
  width: 8em;
  height: 5em;
}

.absolute-in-scrolled-waypoint {
  position: absolute;
  bottom: 0.3em;
  right: 0.3em;
  width: 6em;
  height: 3em;
}

.sticky-root {
  @include offset-container;
  position: relative;
  margin: 1em;
  margin-top: 1.2em;
  width: 7.2em;
  height: 6.8em;
  padding: 0.7em;
}

.sticky-container {
  position: -webkit-sticky;
  position: sticky;
  left: 0;
  top: 0;
  border-width: 0;
}

.absolute-in-stickied-container {
  position: relative;
  width: 8em;
  height: 5em;
}

.absolute-in-stickied-waypoint {
  position: absolute;
  bottom: 0.3em;
  right: 0.3em;
  width: 6em;
  height: 3em;
}

.spacer {
  width: 1.75em;
  height: 3.5em;
  border: slateblue dotted;
}

.double-preserve3d-root {
  @include offset-container;
  transform: rotateY(65deg);
  transform-style: preserve-3d;
}

.double-preserve3d-container {
  @include offset-container;
  transform: rotateY(253deg);
  margin: 0;
  transform-style: preserve-3d;
}

.double-preserve3d-waypoint {
  transform: rotateY(25deg);
}

.revert-preserve3d-root {
  @include offset-container;
  transform: rotateY(65deg);
  transform-style: preserve-3d;
}

.revert-preserve3d-container {
  @include offset-container;
  transform: rotateY(253deg);
  margin: 0;
}

.revert-preserve3d-waypoint {
  transform: rotateY(25deg);
}

// COPY

.copy-trialgrounds {
  padding: 0.5em;
}

.copy-bg-waypoint {
  @include test-waypoint;

  background-color: midnightblue;
}

.copy-border-waypoint {
  @include test-waypoint;

  border: solid 12px;
}

.copy-border-per-side-waypoint {
  @include test-waypoint;

  border-style: solid;
  border-left-width: 12px;
  border-right-width: 6px;
  border-top-width: 3px;
  border-bottom-width: 9px;
}

.copy-border-box-sizing-waypoint {
  @include test-waypoint;

  width: 8em;
  height: 6em;

  border: solid 12px;
  box-sizing: border-box;
}

.copy-text-align-waypoint {
  @include test-waypoint;

  text-align: center;
}

// NESTED WAYFINDER

.nested-wf-hub {
  margin-bottom: 1em;
  width: 11em;
  height: 8em;
  border: solid 3px lightseagreen;
}

.nested-wf-container {
  position: relative;
  width: -moz-fit-content;
  width: fit-content;
  height: fit-content;
  border: solid 9px royalblue;
}

.nested-wf-waypoint {
  @include test-waypoint;
}

.nested-wayfinder {
  @include wat.wayfinder;
}

.nest-wf-in-scroll-hub {
  width: 4.7em;
  height: 3.2em;
  padding-right: 6.25em;
  padding-bottom: 6.25em;
  overflow: scroll;
}

.nest-in-font-size-waypoint {
  /* in a lot of scenarios safari can't handle borders in em,
  since--once converted to px--safari can't handle non-integer
  border values. the borders will just disappear.
  afaik, there's no way to round on the fly,
  so my recommendation is to always use px for borders.
  todo: convert remaining test borders to px */
  border-width: 6px;
}

// FIXED-PARENT WAYFINDER

.fixed-trialgrounds {
  @include wat.transformed-element--enable-pass-through-of-pointer-events;

  font-size: 0.5em;

  position: fixed;
  top: 3em;
  left: 31em;
  width: 16em;
  transform: translate(-1em, -1em);

  z-index: 1;

  pointer-events: none;
}

.fixation-container {
  z-index: 1;
}

.fixed-parent-wayfinder {
}

.fixed-parent-control-waypoint {
  @include test-waypoint;
}

.fixed-parent-to-fixed-waypoint {
  @include test-waypoint;
}

.fixed-parent-to-body-waypoint {
  @include test-waypoint;
  color: gold;
}

// FIXED WAYFINDER

.fixed-wayfinder {
  position: fixed;
  top: 1em;
  left: 1em;

  transform: translate(1em, 1em);

  z-index: 2;
}

// BODY WAYFINDER

.body-wayfinder {
  z-index: 2;
}

// fixed-to-fixed-parent-waypoint

.fixed-to-fixed-parent-waypoint {
  @include test-waypoint;

  font-size: 0.5em;

  position: fixed;
  left: 40em;
  top: 10.35em;
}

// body-to-fixed-parent-waypoint

.body-to-fixed-parent-waypoint {
  @include test-waypoint;

  font-size: 0.3em;

  position: absolute;
  left: 38.1em;
  top: 17.05em;

  color: gold;
}

// CONTROLLER

.controller {
  display: flex;
  font-size: 1.45em;

  position: fixed;
  right: 1em;
  top: 47%;

  width: 0em;
  height: 0em;

  transform: rotateZ(90deg) translateZ(120em);
  justify-content: center;

  z-index: 101;
}

.controller-row {
  font-size: clamp(0.4em, 1em, 4vh);
  min-width: 19em;
}

.row-2 {
  position: absolute;
  transform: translateX(1em) translateY(2.2em);
}

.controller-button {
  @include wat.clickable--mobile-friendly;
  float: left;
  margin-left: 0.4em;
  border: solid 0.1em;
  padding: 0.2em 0.5em;

  color: seagreen;
  background-color: rgba(28, 0, 69, 0.5);
  text-align: center;

  -webkit-user-select: none; /* Safari */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE10+/Edge */
  user-select: none; /* Standard */
}

.bug-report-button {
  margin-left: 0.6em;
  border: none;
  padding: 0;

  a {
    img {
      height: 2.2em;
      transform: rotate(-90deg);
    }
  }
}
