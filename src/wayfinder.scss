/** REQUIRED MIXINS 
*   1. wayfinder
*   2. traveler
*/

/**
* wayfinder elements provide a common ground for travelers to move around in
*
* this mixin preps the wayfinder to be in a valid location for travelers to use as a common
* anchor point, and prevents the wayfinder or its children from colliding or interacting with
* its parent or siblings
*
* note: width and height don't matter unless 'overflow: hidden' clipping is desired, see optional
* mixins below
*
* note: the wayfinder div is usually placed at the end of the div it's in, for z-index purposes
*/
@mixin wayfinder {
  visibility: hidden;
  position: absolute;
  left: 0;
  top: 0;
  width: 0;
  height: 0;
}
.wayfinder {
  @include wayfinder;
}

/** 
* traveler divs should be placed in wayfinder divs, and can be used as wrappers for actual content,
* or as visual effects
*
* this mixin preps the traveler to receive WatParams and position itself within the wayfinder
*
* note: a traveler in a wayfinder is always in a valid state, even mid-way through an animation.
* thus, travelers can have new destinations set without worrying about where exactly they happen to be
* 
* note: placing travelers outside of wayfinders perhaps could be made to work, but is unsupported for the
* forseeable future
*/
@mixin traveler {
  visibility: visible;
  position: absolute;

  // transform origin must not be changed from the default (center center), for now
  transform-origin: center center;

  // animation optimization, can prevent artifacts that occur in specific situations
  // not supported by ie but who cares
  will-change: transforms;
}
.traveler {
  @include traveler;
}

/** BROWSER BUG WORKAROUNDS
*   1. wayfinder--safari-3d-clipping-bug--translatez
*/

/**
* safari 3d stacking/clipping bug
*
* the point of this mixin is to notify users of an ancient bug that apple has left in
* safari/webkit that can break the rendering of stacked + 3d-transformed elements,
* as well as suggest a quick hack solution
* 
* TLDR: in safari, elements with 3d transforms will completely ignore z-indices and stacking
* contexts, and will potentially clip through elements in front of or behind them. if you
* want to stack 3d travelers on 3d waypoints, then this mixin will quickly and hackily
* separate them by 99em
* 
* ---
*
* note: only using 2d transforms? you can ignore this mixin 
*
* note: a common sign that you've run into this problem is if only half of an element is being
* rendered, like it was sliced in half at some angle
* 
* note: translateZ(99em) is arbitrary and can still be broken with a 3d transform of the right
* magnitude. this workaround is more of a suggestion. there may be other solutions to this
* problem, but there's no way to force safari to respect z-indices, afaik
*
* apple/webkit, please fix z-index
*/
@mixin wayfinder--safari-3d-clipping-bug--translatez {
  transform: translateZ(99em);
}
.wayfinder--safari-3d-clipping-bug--translatez {
  @include wayfinder--safari-3d-clipping-bug--translatez;
}

/** OPTIONAL MIXINS
*   1. wayfinder--clip-to-nearest-positioned-ancestor
*   2. body--enable-clipping-to-page-width
*   3. body--enable-clipping-to-content-width
*   4. transformed-element--enable-pass-through-of-pointer-events
*   5. clickable--mobile-friendly
*
* CLIPPING AND DISABLE MOBILE X-SCROLL MIXINS
*
* TLDR: to achieve a proper 'overflow-x: hidden' effect on the wayfinder, I've found that it's
* best to enable both x and y clipping and make sure that the height of the container doesn't get
* in the way
*
* these mixins enable clipping on the wayfinder, set the wayfinder's size to its nearest
* positioned ancestor, and then prep the body to fit to either the viewport or the content
*
* note: the main reason I made these mixins was to remove horizontal scrolling on
* mobile if travelers extended past the edge of the screen. the way the standard implemented
* 'overflow-x: hidden' sucks and there aren't any other simple ways to get width-only clipping, afaik
*/

/**
* useful for disabling unwanted x-scroll on mobile. can be used in combination with one of the
* body mixins below. 
*/
@mixin wayfinder--clip-to-nearest-positioned-ancestor {
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.wayfinder--clip-to-nearest-positioned-ancestor {
  @include wayfinder--clip-to-nearest-positioned-ancestor;
}

/**
* extremely useful for avoiding x-scroll and annoying hiccups from touch input and scrolling on mobile
* https://www.freecodecamp.org/news/html-page-width-height/
*
* IMPORTANT: you must use the following standard meta tag to set the viewport width for mobile devices:
*   <head>
*     <meta name="viewport" content="width=device-width, initial-scale=1">
*   </head>
*/
@mixin body--enable-clipping-to-page-width {
  position: absolute;
  width: 100%;
  min-height: 100vh; // in case the content doesn't fill the whole page height

  // these will likely fuck things up if set differently
  margin: 0;
  padding: 0;
  float: none;
}
.body--enable-clipping-to-page-width {
  @include body--enable-clipping-to-page-width;
}

/** 
* useful in case you still want content to scroll horizontally, but you don't want travelers to add extra
* scroll beyond the content
*
* note: 'min-width: fit-content' doesn't consider absolutely positioned children as content
*/
@mixin body--enable-clipping-to-content-width {
  @include body--enable-clipping-to-page-width;
  min-width: fit-content;
  min-width: -moz-fit-content;
}
.body--enable-clipping-to-content-width {
  @include body--enable-clipping-to-content-width;
}

/**
* transforming an element adds pointer-events to it, even if it's transparent
*
* this mixin allows mouse input to pass through a transformed element to elements behind it,
* while setting the pointer-events property for all its children
*
* $pointer-events-of-children: provide the pointer-events value for all children of the element
*   (default value is all)
*/
@mixin transformed-element--enable-pass-through-of-pointer-events($pointer-events-of-children: all) {
  pointer-events: none;
  > * {
    pointer-events: $pointer-events-of-children;
  }
}
.transformed-element--enable-pass-through-of-pointer-events {
  @include transformed-element--enable-pass-through-of-pointer-events(all);
}

/** 
* setting the cursor to pointer sometimes adds an annoying auto-highlighting feature on certain mobile browsers
*
* this mixin adds the click cursor on desktop while avoiding that feature. this mixin doesn't disable selection
* pointer-events
*
* note: haven't tested this broadly
*/
@mixin clickable--mobile-friendly {
  cursor: pointer;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
}
.clickable--mobile-friendly {
  @include clickable--mobile-friendly;
}

/** NAMEPLATE STYLE MIXINS
*   1. waypoint-nameplate
*   2. waypoint-floating-nameplate
*   3. waypoint-floating-nameplate-shadow
*/

/** nameplate to label waypoints or whatever */
@mixin waypoint-nameplate {
  position: absolute;

  right: 0.5em;
  bottom: -0.2em;

  font-size: 1.3em;

  min-width: 1.1em;
  padding: 0 0.6em 0 0.6em;
  text-align: center;

  padding-top: 0.09em;
  padding-bottom: 0.15em;

  border: dotted 0.1em;
  border-radius: 1.5em;
}
.waypoint-nameplate {
  @include waypoint-nameplate;
}

/** same, but floated up a couple layers */
@mixin waypoint-floating-nameplate {
  @include waypoint-nameplate;

  z-index: 2;

  color: rgb(32, 178, 170);
  background: rgb(24, 26, 27);
  border-style: dashed;
}
.waypoint-floating-nameplate {
  @include waypoint-floating-nameplate;
}

/** gives a layered look to a floating nameplate */
@mixin waypoint-floating-nameplate-shadow {
  @include waypoint-nameplate;

  right: 0.9em;
  bottom: 0.2em;
}
.waypoint-floating-nameplate-shadow {
  @include waypoint-floating-nameplate-shadow;
}
