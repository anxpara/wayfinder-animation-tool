/** REQUIRED MIXINS */

/**
* the wayfinder div must be removed from the page's flow, and its origin must be (0, 0). width and
* height don't matter unless clipping is desired, see optional mixins below
*
* the wayfinder div should generally be placed at the end of the div it's in, for z-index purposes
*/
@mixin wayfinder {
  visibility: hidden;
  position: absolute;
  left: 0;
  top: 0;
  width: 0;
  height: 0;
}
.wayfinder {
  @include wayfinder;
}

/** traveler divs should generally be used only as wrappers for actual content */
@mixin traveler {
  visibility: visible;
  position: absolute;

  // transform origin must not be changed from the default (center center)
  transform-origin: center center;

  // animation optimization, can prevent artifacts that occur in specific situations
  // not supported by ie but who cares
  will-change: transforms;
}
.traveler {
  @include traveler;
}

/** BROWSER BUG WORKAROUNDS */

/**
* safari 3d stacking/clipping bug
*
* note: required for 3d waypoints
* 
* you can ignore this mixin if you'll only be using 2d transforms, or if you're certain
* you'll never have 3d elements stacked on or behind other elements. a common sign that
* you've run into this problem is if only half of an element is being rendered, like it
* was sliced in half at some angle
*
* -----
*
* unfortunately, there's an ancient bug that apple has left in safari/webkit that breaks the
* rendering of stacked, 3d-transformed elements
* 
* TLDR: in safari, elements with 3d transforms will completely ignore z-indices and stacking
* contexts, and will potentially clip through elements in front of or behind them. if you
* want to stack 3d elements, then you'll need to use z-axis translations as a fallback for
* z-indices to avoid clipping
* 
* this workaround translates the wayfinder div up the z-axis away from its siblings by an
* arbitrary unit of 99em. to layer other siblings in front of the wayfinder, use
* translateZ(100em) or higher.
* 
* note: translateZ(99em) is arbitrary and can still be broken with a 3d transform of the right
* magnitude. this workaround is more of a suggestion. there may be other solutions to this
* problem, but there's no way to force safari to respect z-indices
*
* note: you might still need to use z-indices for other browsers
*
* thanks apple :|
*/
@mixin wayfinder--safari-3d-clipping-bug--translatez {
  transform: translateZ(99em);
}
.wayfinder--safari-3d-clipping-bug--translatez {
  @include wayfinder--safari-3d-clipping-bug--translatez;
}

/** OPTIONAL MIXINS */

/** CLIPPING AND DISABLE MOBILE X-SCROLL MIXINS
*
* note: the original reason I made these clipping mixins was to remove horizontal scrolling on
* mobile if travelers extended past the edge of the screen The way the standard implemented
* 'overflow-x: hidden' sucks and there aren't any other simple ways to get width-only clipping.
* instead, I've found it's best to enable full clipping and just make sure that the height of
* the container doesn't get in the way
* 
* in order for the wayfinder to clip at the edge of the screen, it needs to fill the body's
* width. this is not the default behavior, since the wayfinder is 'positioned.' A positioned
* element with width and height set to 100% will fill its most recent *positioned* ancestor
*
* a couple mixin options are provided below to prep the body element for wayfinder clipping
* 
* of course, if you want to clip to something other than the actual page then you don't have
* to use those particular mixins, although the technique will probably be the same
*/
@mixin wayfinder--clip-to-nearest-positioned-ancestor {
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.wayfinder--clip-to-nearest-positioned-ancestor {
  @include wayfinder--clip-to-nearest-positioned-ancestor;
}

/**
* extremely useful for avoiding x-scroll and annoying hiccups from touch input and scrolling on mobile
* https://www.freecodecamp.org/news/html-page-width-height/
*
* IMPORTANT: you must use the following meta tag to set the viewport width for mobile devices:
*   <head>
*     <meta name="viewport" content="width=device-width, initial-scale=1">
*   </head>
*/
@mixin body--enable-clipping-to-page-width {
  position: absolute;
  width: 100%;
  min-height: 100vh; // in case the content doesn't fill the whole page height

  // these will likely fuck things up if set differently
  margin: 0;
  padding: 0;
  float: none;
}
.body--enable-clipping-to-page-width {
  @include body--enable-clipping-to-page-width;
}

/** 
* useful in case you still want horizontal scroll, but you don't want travelers to add extra
* width beyond the content keep in mind that the body won't consider absolutely positioned
* children as content
*/
@mixin body--enable-clipping-to-content-width {
  @include body--enable-clipping-to-page-width;
  min-width: fit-content;
  min-width: -moz-fit-content;
}
.body--enable-clipping-to-content-width {
  @include body--enable-clipping-to-content-width;
}

/** MISC. MIXINS */

/**
* allow mouse input to pass through a transformed element to elements behind it,
* while preserving mouse input for the children of the element
*
* $pointer-events-of-children: set the pointer-events for all children of the element.
*   (default value is all)
*/
@mixin transformed-element--enable-pass-through-of-pointer-events($pointer-events-of-children: all) {
  pointer-events: none;
  > * {
    pointer-events: $pointer-events-of-children;
  }
}
.transformed-element--enable-pass-through-of-pointer-events {
  @include transformed-element--enable-pass-through-of-pointer-events(all);
}

/** 
* add click cursor on desktop while avoiding annoying mobile click style on some browsers
* haven't tested this broadly
*/
@mixin clickable--mobile-friendly {
  cursor: pointer;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
}
.clickable--mobile-friendly {
  @include clickable--mobile-friendly;
}

/** BONUS STYLING MIXINS */

/** nice h2 nameplate to label waypoints clearly */
@mixin waypoint-nameplate {
  position: absolute;

  right: 0.5em;
  bottom: -0.2em;

  font-size: 1.3em;

  min-width: 1.1em;
  padding: 0 0.6em 0 0.6em;
  text-align: center;

  padding-top: 0.09em;
  padding-bottom: 0.15em;

  border: dotted 0.1em;
  border-radius: 1.5em;
}
.waypoint-nameplate {
  @include waypoint-nameplate;
}

/** same, but floated up a couple layers */
@mixin waypoint-floating-nameplate {
  @include waypoint-nameplate;

  z-index: 2;

  color: lightseagreen;
  background: #181a1b;
  border-style: dashed;
}
.waypoint-floating-nameplate {
  @include waypoint-floating-nameplate;
}

/** gives a layered look to a floating nameplate, good for z-index layer visualization */
@mixin waypoint-floating-nameplate-shadow {
  @include waypoint-nameplate;

  right: 0.9em;
  bottom: 0.2em;
}
.waypoint-floating-nameplate-shadow {
  @include waypoint-floating-nameplate-shadow;
}
